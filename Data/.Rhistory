setwd("C:/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data")
# Manually set wd to data folder to read in data
victims <- read.csv("Victimisations_time_and_place (cleaned).csv", header = TRUE)
setwd("C:/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data")
# Manually set wd to data folder to read in data
victims <- read.csv("Victimisations_time_and_place (cleaned).csv", header = TRUE)
# Manually set wd to data folder to read in data
victims <- read.csv("Victimisations_time_and_place (cleaned).csv", header = TRUE)
victims <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Covid calls for service cleaned.csv", header = TRUE)
covid <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Covid calls for service cleaned.csv", header = TRUE)
victim1 <- separate(victims, "date", c("day", "month", "year"))
library(dplyr)
victim1 <- separate(victims, "date", c("day", "month", "year"))
library(tidyr)
victim1 <- separate(victims, "date", c("day", "month", "year"))
View(victims)
victims <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Victimisations_time_and_place (cleaned).csv", header = TRUE)
victim1 <- separate(victims, "date", c("day", "month", "year"))
months <- c(3,4,5)
View(victims)
victims <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Victimisations_time_and_place (partly filtered).csv", header = TRUE)
victims <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Victimizations_time_and_place (partly filtered)", header = TRUE)
victims <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Victimizations_time_and_place (partly filtered).csv", header = TRUE)
library(tidyverse)
library(tidyverse)
library(lubridate)
victims <- victims %>% unite(date,c("day","month","year"),sep="/")
View(victims)
unique(assault$ANZSOC.Group)
assault <- victims$ANZSOC.Group # This was filtered to just be assault in the initial clean
unique(assault$ANZSOC.Group)
assault <- victims %>% filter(ANZSOC.Group == c("Serious Assault Not Resulting in Injury", "Non-Aggravated Sexual Assault", "Serious Assault Resulting in Injury", "Common Assault", "Aggravated Sexual Assault"))
unique(assault$ANZSOC.Group)
unique(victims$ANZSOC.Group)
write.csv(victims_17_18_19, "/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Victimizations_time_and_place (filtered years).csv")
covid <- read.csv("/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Covid_calls for service.csv")
head(covid)
View(covid)
unique(covid$Event.Type[grep("Assault", covid$Event.Type)])
covid_assault <- covid %>% filter(Event.Type == c("Aggravated Sexual Assault","Non-Aggravated Sexual Assault","Assault not further defined","Common Assault"))
covid_assault <- covid %>% filter(Event.Type == c("Aggravated Sexual Assault","Non-Aggravated Sexual Assault","Assault not further defined","Common Assault"))
View(covid_assault)
sum(is.na(covid_assault))
colnames(covid_assault)
names(covid_assault)[names(covid_assault) == 'Ã¯..District'] <- 'District'
write.csv(covid_assault, "/Users/abbey/OneDrive/UniWork_2020/DATA301/New folder/DATA301-Group-Project/Data/Covid calls for service cleaned.csv")
library(readxl)
library(ggplot2)
library(purrr)
library(tidyr)
train <- read.csv('electricity_data_labelled.csv')
test <- read.csv('electricity_data_unlabelled.csv')
station_type <- read_excel("power_station_info.xls", sheet = "Stations FuelType")
station_info <- read_excel("power_station_info.xls", sheet = "Generating Stations (2015)")
trainFlipped <- t(train)
head(trainFlipped)
View(trainFlipped)
trainFlipped <- t(train, header = TRUE)
headers <- trainFlipped[1,]
headers
colnames(trainFlipped) <- headers
trainFlipped[1,] <- NULL
trainFlipped[1,] <- NULL
trainFlipped <- trainFlipped[-c(1), ]
colnames(trainFlipped) <- headers
trainFlipped <- t(train) # transpose the table
headers <- trainFlipped[1,]
colnames(trainFlipped) <- headers
View(trainFlipped)
View(train)
trainFlipped <- trainFlipped[-c(1), ]
View(station_type)
trainType <- cbind(train, station_info)
trainType <- rbind(train, station_info)
View(train)
trainType <- merge(x = train, y = station_type, by.x = colname, by.y = gencode )
trainType <- merge(x = train, y = station_type, by.x = colnames(train), by.y = gencode )
trainType <- merge(x = train, y = station_type, by.x = colnames(train), by.y = station_type$Gen_Code )
colnames(station_type)[0] <- "station"
View(station_type)
colnames(station_type)[1] <- "station"
colnames(station_type)[1] <- "Station"
trainType <- merge(x = train, y = station_type, by = "Station")
trainFlipped$Station <- rownames(trainFlipped)
View(trainFlipped)
trainFlipped <- t(train) # transpose the table
View(trainFlipped)
headers <- trainFlipped[1,]
colnames(trainFlipped) <- headers # Set the colnames to the Id
trainFlipped <- trainFlipped[-c(1), ] # Drop the Id's
stations <- rownames(trainFlipped)
stations
trainFlipped$Station <- NA
colnames(trainFlipped)
View(trainFlipped)
trainFlipped <- t(train) # transpose the table
headers <- trainFlipped[1,]
colnames(trainFlipped) <- headers # Set the colnames to the Id
trainFlipped <- trainFlipped[-c(1), ] # Drop the Id's
colnames(trainFlipped)
trainFlipped$Station
trainFlipped["Station"] <- NA
colnames(trainFlipped)
trainFlipped <- t(train) # transpose the table
headers <- trainFlipped[1,]
colnames(trainFlipped) <- headers # Set the colnames to the Id
trainFlipped <- t(train) # transpose the table
headers <- trainFlipped[1,]
colnames(trainFlipped) <- headers # Set the colnames to the Id
trainFlipped <- trainFlipped[-c(1), ] # Drop the Id's
colnames(station_type)[1] <- "Station"
View(trainFlipped)
View(station_type)
rownames(station_type) <- station_type$Station
View(station_type)
station_type <- station_type[-c(1), ]
View(station_type)
station_type <- station_type[-c(1), ]
View(station_type)
station_type <- station_type[-c(2), ]
station_type <- read_excel("power_station_info.xls", sheet = "Stations FuelType")
stationType <- station_type
stationType <- stationType[,-c(1)]
stationType <- station_type
colnames(stationType)[1] <- "Station"
rownames(statioType) <- stationType$Station
rownames(stationType) <- stationType$Station
stationType <- stationType[,-c(1)]
View(stationType)
stationType <- station_type
colnames(stationType)[1] <- "Station"
rownames(stationType) <- stationType$Station
View(stationType)
stationType <- stationType[,-c(1)]
View(stationType)
stationType <- station_type
colnames(stationType)[1] <- "Station"
index <- stationType$Station
stationType <- stationType[,-c(1)] # Drop the station name
rownames(stationType) <- index # Set the station names as the index
View(stationType)
fullStations <- rbind(trainFlipped, stationType)
ncol(stationType)
nrow(stationType)
nrow(trainFlipped)
trainFlipped <- trainFlipped[-c(nrow(trainFlipped)), ] # Drop the price (not needed for exploration)
fullStations <- rbind(trainFlipped, stationType)
fullStations <- cbind(trainFlipped, stationType)
View(fullStations)
unique(fullStations$Fuel_Code)
Hydro <- fullStations %>% filter(Fuel_Code == "Hydro")
Hydro <- fullStations %>% filter(Fuel_Code == "Hydro")
Wind <- fullStations %>% filter(Fuel_Code == "Wind")
Gas <- fullStations %>% filter(Fuel_Code == "Gas")
Coal <- fullStations %>% filter(Fuel_Code == "Coal")
Geo <- fullStations %>% filter(Fuel_Code == "Geo")
Wood <- fullStations %>% filter(Fuel_Code == "Wood")
Diesel <- fullStations %>% filter(Fuel_Code == "Diesel")
FuelTypes <- unique(fullStations$Fuel_Code)
Hydro %>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
View(Hydro)
# Seperate stations into the fuel types
Hydro <- t(fullStations %>% filter(Fuel_Code == "Hydro"))
Wind <- t(fullStations %>% filter(Fuel_Code == "Wind"))
Gas <- t(fullStations %>% filter(Fuel_Code == "Gas"))
Coal <- t(fullStations %>% filter(Fuel_Code == "Coal"))
Geo <- t(fullStations %>% filter(Fuel_Code == "Geo"))
Wood <- t(fullStations %>% filter(Fuel_Code == "Wood"))
Diesel <- t(fullStations %>% filter(Fuel_Code == "Diesel"))
Hydro %>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
rownames(Hydro)
# Seperate stations into the fuel types and transpose them back for plotting
Hydro <- t(fullStations %>% filter(Fuel_Code == "Hydro"))%>%select(-Fuel_code)
Hydro %>%
select(-Fuel_Code)%>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
Hydro %>%
slice_tail(1)%>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
Hydro %>%
slice_tail(-1)%>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
Hydro %>%
slice(-1)%>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
Hydro <- Hydro[-c(nrow(Hydro)), ]
Hydro %>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
train3 %>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
library(readxl)
library(ggplot2)
library(purrr)
library(tidyr)
Hydro <- Hydro[-c(nrow(Hydro)), ]
Hydro %>%
gather() %>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
# Seperate stations into the fuel types and transpose them back for plotting
Hydro <- (fullStations %>% filter(Fuel_Code == "Hydro")
ggplot(Hydro) + geom_line(aes(y = value))
ggplot(Hydro) + geom_line()
Hydro%>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
colname <- colnames(train)
for (i in 2:length(colname)){
ggplot(data = train, aes(y = , x =colname[i],  Id)) + geom_line()
}
train1 <- train[,2:22]
train2 <- train[, 23:44]
train3 <- train[, 44:64]
View(train3)
View(train3)
# Seperate stations into the fuel types and transpose them back for plotting
Hydro <- (fullStations %>% filter(Fuel_Code == "Hydro")
# Seperate stations into the fuel types and transpose them back for plotting
Hydro <- (fullStations %>% filter(Fuel_Code == "Hydro"))
# Seperate stations into the fuel types and transpose them back for plotting
Hydro <- (fullStations %>% filter(Fuel_Code == "Hydro"))
View(Hydro)
Wind <- t(fullStations %>% filter(Fuel_Code == "Wind"))
Hydro%>%
ggplot(aes(x = value)) +
facet_wrap(~ key, scales = "free") +
geom_density()
Wind
Wind%>%
ggplot(aes(x=value))+
geom_bar()
